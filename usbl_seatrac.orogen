# frozen_string_literal: true

name "usbl_seatrac"

import_types_from "std"
import_types_from "base"
import_types_from "iodrivers_base"
using_task_library "iodrivers_base"

using_library "usbl_seatrac"
import_types_from "usbl_seatrac/Protocol.hpp"
import_types_from "usbl_seatrac/Ping.hpp"

# Driver task for USBL Seatrac X150/X010
# The corresponding C++ class can be edited in tasks/Task.hpp and
# tasks/Task.cpp, and will be put in the usbl_seatrac namespace.
task_context "Task", subclasses: "iodrivers_base::Task" do
    needs_configuration

    # The Beacon Id to send the Ping
    property "destination_id", "usbl_seatrac/protocol/BeaconIdentificationCode",
             "BEACON_ID2"
    # The type of data message. It could be: MSG_REQ, MSG_REQU, MSG_REQX
    property "msg_type", "usbl_seatrac/protocol/AcousticMessageType", "MSG_REQX"
    # The local Beacon Id to be set
    property "xcvr_beacon_id", "usbl_seatrac/protocol/BeaconIdentificationCode",
             "BEACON_ID15"
    # The pressure offset is automatically chosen using the minimum observed pressure
    property "auto_pressure_ofs", "bool", false
    # The velocity-of-sound used in range timing equations is automatically computed
    property "auto_vos", "bool", true
    # Automatic (dynamic) calibration of the magnetometer
    property "auto_cal_mag", "bool", false
    # Series of diagnostic status messages will be generated by triggering events
    # processed by the transceiver
    property "xcvr_diag_msgs", "bool", false
    # A status message will be generated on successful reception of an acoustic response
    property "xcvr_fix_msgs", "bool", true
    # A status message is generated on successfully reception of an acoustic message
    # containing USBL signal information
    property "xcvr_usbl_msgs", "bool", true
    # Transmit Message control flags
    property "xcvr_tx_msgctrl", "usbl_seatrac/protocol/TxMessageControl",
             "XCVR_TXMSG_ALLOW_ALL"
    # The position filter is enabled to mark potentially erroneous acoustic USBL fixes
    property "xcvr_posflt_enable", "bool", true
    # The transceiver will use the attitude when resolving relative position
    property "usbl_use_ahrs", "bool", false
    # Distance beyond which responses from beacons are ignored
    property "xcvr_range_tmo", "float"
    # How long the beacon will wait between receiving a request message and starting
    # transmission
    property "xcvr_resp_time", "base/Time"
    # Maximum time that a beacon is not communicated with before its position filter
    # is reset
    property "xcvr_posflt_tmo", "base/Time"
    # How often periodic status output messages are generated
    property "status_mode",  "usbl_seatrac/protocol/StatusMode",
             "STATUS_MODE_2HZ5"

    # USBL Local Relative Position Coordinates
    output_port("local_pose", "base/samples/RigidBodyState")
    # USBL Beacon X150  - z = local_pressure , orientation = local_attitude
    output_port("usbl_pose", "base/samples/RigidBodyState")
    output_port("ping_status", "usbl_seatrac/PingStatus")

    periodic 0.1
end
